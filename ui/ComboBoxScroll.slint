import { ScrollView, Palette, HorizontalBox } from "std-widgets.slint";
import { ReelixPalette } from "./globale.slint";

export component ComboBoxScroll {
    in property <[string]> model;
    in-out property <int> current-index: 0;
    in-out property <string> current-value: root.model[root.current-index];
    out property <bool> has-focus;

    Rectangle {
        background: Palette.control-background;
        border-radius: 3px;
        border-width: 1px;
        border-color: Palette.border;
    }

    HorizontalBox { 
        label := Text {
            vertical-alignment: center;
            horizontal-alignment: left;
            text <=> root.current-value;
            font-size: 16px;
            horizontal-stretch: 1;
        }
        Image {
            source: @image-url("../images/_dropdown.svg");
        }
    }

    TouchArea {
        width: 100%;
        height: 100%;
        clicked => { popup.show(); }
    }

    popup := PopupWindow {
        x: 0;
        y: root.height; // want to use y: -4px; but transparent
        width: root.width;
        height: min(inner.preferred-height, 230px);

        Rectangle {
            background: ReelixPalette.control-background;
            border-radius: 3px;
            border-width: 1px;
            border-color: Palette.border;
        }
        ScrollView {
            inner := VerticalLayout {
                spacing: 6px;
                padding: 3px;

                for value[idx] in root.model: Rectangle {
                    border-radius: 3px;
                    background: item-area.has-hover ? Palette.background.brighter(1.5) : Palette.control-background;
                    HorizontalLayout {
                        Text {
                            text: value;
                            font-size: 14px;
                        }
                    }
                    item-area := TouchArea {
                        clicked => {
                            root.current-value = value;
                        }
                    }
                }
            }
        }
    }
}